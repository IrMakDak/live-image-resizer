import aiohttp

from telegram import Update
from telegram.ext import (
    Application,
    CommandHandler,
    MessageHandler,
    ContextTypes,
    filters,
)
from pathlib import Path

SERVER_PORT = 5000
PROCESS_IMAGE_HOST = "http://127.0.0.1"
PROCESS_IMAGE_ROUTE = "/process_image"
RANDOM_IMAGE_ROUTE = "/random_image"
# TELEGRAM_TOKEN = "–º–æ–π_—Ç–æ–∫–µ–Ω"
UPLOAD_DIR = "../originals"  # –ü–∞–ø–∫–∞ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –æ—Ä–∏–≥–∏–Ω–∞–ª–æ–≤

Path(UPLOAD_DIR).mkdir(exist_ok=True)


async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é, –∏ —è —Å–æ—Ö—Ä–∞–Ω—é –µ—ë –≤ –ø–∞–ø–∫—É resized —Å –Ω–æ–≤—ã–º —Ä–∞–∑–º–µ—Ä–æ–º.\n"
        "–ò—Å–ø–æ–ª—å–∑—É–π /random —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–ª—É—á–∞–π–Ω–æ–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ."
    )


async def handle_photo(update: Update, context: ContextTypes.DEFAULT_TYPE):
    photo = update.message.photo[-1]  # –ë–µ—Ä—ë–º —Å–∞–º–æ–µ –±–æ–ª—å—à–æ–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ

    try:
        # –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–æ—Ç–æ
        file = await context.bot.get_file(photo.file_id)
        file_path = Path(UPLOAD_DIR) / f"{photo.file_id}.jpg"

        await file.download_to_drive(file_path)

        await update.message.reply_text(f"‚úÖ –§–æ—Ç–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ!\n{photo.file_id}")

    except aiohttp.ClientError as e:
        await update.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º: {str(e)}")
    except Exception as e:
        await update.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")


async def get_random_image(update: Update, context: ContextTypes.DEFAULT_TYPE):
    # –ü–æ–ª—É—á–∏—Ç—å –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–ª—É—á–∞–π–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    try:
        async with aiohttp.ClientSession() as session:
            async with session.get(
                f"{PROCESS_IMAGE_HOST}:{SERVER_PORT}{RANDOM_IMAGE_ROUTE}",
            ) as response:
                if response.status == 200:
                    # –ï—Å–ª–∏ –ø–æ–ª—É—á–∏–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –µ–≥–æ
                    image_data = await response.read()
                    await update.message.reply_photo(
                        photo=image_data, caption="üé≤ –°–ª—É—á–∞–π–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –≥–∞–ª–µ—Ä–µ–∏"
                    )
                else:
                    # –ï—Å–ª–∏ –ø–æ–ª—É—á–∏–ª–∏ –æ—à–∏–±–∫—É, –ø–∞—Ä—Å–∏–º JSON —Å –æ—à–∏–±–∫–æ–π
                    error_data = await response.json()
                    await update.message.reply_text(
                        f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: {error_data.get('message', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}"
                    )

    except aiohttp.ClientError as e:
        await update.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º: {str(e)}")
    except Exception as e:
        await update.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")


def run_bot():
    application = Application.builder().token(TELEGRAM_TOKEN).build()

    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("random", get_random_image))
    application.add_handler(MessageHandler(filters.PHOTO, handle_photo))

    application.run_polling()


if __name__ == "__main__":
    run_bot()
